{
  "artifacts": [],
  "command": "my_main",
  "experiment": {
    "base_dir": "D:\\Unity_epymarl\\src",
    "dependencies": [
      "numpy==1.23.5",
      "PyYAML==5.3.1",
      "sacred==0.8.7",
      "torch==2.5.1"
    ],
    "mainfile": "main.py",
    "name": "pymarl",
    "repositories": [
      {
        "commit": "eb3040ae1b81ab1b4b05615d8cafa0e5589af969",
        "dirty": true,
        "url": "git@github.com:xmy86/Unity_epymarl.git"
      },
      {
        "commit": "eb3040ae1b81ab1b4b05615d8cafa0e5589af969",
        "dirty": true,
        "url": "git@github.com:xmy86/Unity_epymarl.git"
      },
      {
        "commit": "eb3040ae1b81ab1b4b05615d8cafa0e5589af969",
        "dirty": true,
        "url": "git@github.com:xmy86/Unity_epymarl.git"
      }
    ],
    "sources": [
      [
        "main.py",
        "_sources\\main_d5d1cad4c147a0b5b922a69036ced570.py"
      ],
      [
        "run.py",
        "_sources\\run_f36d64f8fbfded28eda95c491ec977c8.py"
      ],
      [
        "utils\\logging.py",
        "_sources\\logging_31034dff59fae30d08263ccee141603c.py"
      ]
    ]
  },
  "fail_trace": [
    "Traceback (most recent call last):\n",
    "  File \"d:\\envs\\epymarl_unity\\lib\\site-packages\\sacred\\config\\captured_function.py\", line 42, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"D:\\Unity_epymarl/src/main.py\", line 44, in my_main\n    run(_run, config, _log)\n",
    "  File \"D:\\Unity_epymarl/src\\run.py\", line 68, in run\n    run_sequential(args=args, logger=logger)\n",
    "  File \"D:\\Unity_epymarl/src\\run.py\", line 202, in run_sequential\n    episode_batch = runner.run(test_mode=False)\n",
    "  File \"D:\\Unity_epymarl/src\\runners\\episode_runner_continue.py\", line 84, in run\n    _, reward, terminated, truncated, env_info = self.env.step(actions[0])\n",
    "  File \"D:\\Unity_epymarl/src\\envs\\gymma_continue.py\", line 81, in step\n    obs, reward, done, truncated = self._env.step(actions)\n",
    "  File \"D:\\Unity_epymarl/src\\envs\\wrappers.py\", line 34, in step\n    obs, rew, done, truncated = self.env.step(actions)\n",
    "  File \"d:\\envs\\epymarl_unity\\lib\\site-packages\\gymnasium\\wrappers\\common.py\", line 125, in step\n    observation, reward, terminated, truncated, info = self.env.step(action)\n",
    "  File \"d:\\envs\\epymarl_unity\\lib\\site-packages\\gymnasium\\wrappers\\common.py\", line 393, in step\n    return super().step(action)\n",
    "  File \"d:\\envs\\epymarl_unity\\lib\\site-packages\\gymnasium\\core.py\", line 322, in step\n    return self.env.step(action)\n",
    "  File \"d:\\envs\\epymarl_unity\\lib\\site-packages\\gymnasium\\wrappers\\common.py\", line 283, in step\n    return env_step_passive_checker(self.env, action)\n",
    "  File \"d:\\envs\\epymarl_unity\\lib\\site-packages\\gymnasium\\utils\\passive_env_checker.py\", line 254, in env_step_passive_checker\n    assert isinstance(\n",
    "AssertionError: The `info` returned by `step()` must be a python dictionary, actual type: <class 'bool'>\n"
  ],
  "heartbeat": "2024-12-19T06:22:41.415309",
  "host": {
    "ENV": {},
    "cpu": "Intel(R) Core(TM) i7-14700KF",
    "gpus": {
      "driver_version": "560.70",
      "gpus": [
        {
          "model": "NVIDIA GeForce RTX 4080 SUPER",
          "persistence_mode": false,
          "total_memory": 16376
        }
      ]
    },
    "hostname": "DESKTOP-VEH7IM7",
    "os": [
      "Windows",
      "Windows-10-10.0.22631-SP0"
    ],
    "python_version": "3.10.12"
  },
  "meta": {
    "command": "my_main",
    "config_updates": {
      "env_args": {
        "key": "unity_env",
        "time_limit": 200
      }
    },
    "named_configs": [],
    "options": {
      "--beat-interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--id": null,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print-config": false,
      "--priority": null,
      "--queue": false,
      "--s3": null,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false,
      "COMMAND": null,
      "UPDATE": [
        "env_args.time_limit=200",
        "env_args.key=unity_env"
      ],
      "help": false,
      "with": true
    }
  },
  "resources": [],
  "result": null,
  "start_time": "2024-12-19T06:22:35.889762",
  "status": "FAILED",
  "stop_time": "2024-12-19T06:22:41.419308"
}