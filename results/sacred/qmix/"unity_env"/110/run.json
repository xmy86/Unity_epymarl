{
  "artifacts": [],
  "command": "my_main",
  "experiment": {
    "base_dir": "/Users/xumingyuan/Documents/repository/Unity_epymarl/src",
    "dependencies": [
      "numpy==1.23.5",
      "PyYAML==5.3.1",
      "sacred==0.8.7",
      "torch==2.5.1"
    ],
    "mainfile": "main.py",
    "name": "pymarl",
    "repositories": [
      {
        "commit": "76bcb698ddee40264211dde24576c23c48b5198b",
        "dirty": true,
        "url": "git@github.com:xmy86/Unity_epymarl.git"
      },
      {
        "commit": "76bcb698ddee40264211dde24576c23c48b5198b",
        "dirty": true,
        "url": "git@github.com:xmy86/Unity_epymarl.git"
      },
      {
        "commit": "76bcb698ddee40264211dde24576c23c48b5198b",
        "dirty": true,
        "url": "git@github.com:xmy86/Unity_epymarl.git"
      }
    ],
    "sources": [
      [
        "main.py",
        "_sources/main_b2cc1db06d11795e4f8cf6a3b0165fa1.py"
      ],
      [
        "run.py",
        "_sources/run_9a8f86454ee71cadbf98cd53a98f741d.py"
      ],
      [
        "utils/logging.py",
        "_sources/logging_80685d67fab61f6e71e93fbe28085531.py"
      ]
    ]
  },
  "fail_trace": [
    "Traceback (most recent call last):\n",
    "  File \"/opt/anaconda3/envs/epymarl/lib/python3.10/site-packages/sacred/config/captured_function.py\", line 42, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"/Users/xumingyuan/Documents/repository/Unity_epymarl/src/main.py\", line 44, in my_main\n    run(_run, config, _log)\n",
    "  File \"/Users/xumingyuan/Documents/repository/Unity_epymarl/src/run.py\", line 68, in run\n    run_sequential(args=args, logger=logger)\n",
    "  File \"/Users/xumingyuan/Documents/repository/Unity_epymarl/src/run.py\", line 202, in run_sequential\n    episode_batch = runner.run(test_mode=False)\n",
    "  File \"/Users/xumingyuan/Documents/repository/Unity_epymarl/src/runners/episode_runner_continue.py\", line 80, in run\n    actions = self.mac.select_actions(\n",
    "  File \"/Users/xumingyuan/Documents/repository/Unity_epymarl/src/controllers/basic_controller.py\", line 23, in select_actions\n    chosen_actions = self.action_selector.select_action(agent_outputs[bs], avail_actions[bs], t_env, test_mode=test_mode)\n",
    "  File \"/Users/xumingyuan/Documents/repository/Unity_epymarl/src/components/action_selectors.py\", line 58, in select_action\n    random_actions = Categorical(avail_actions.float()).sample().long()\n",
    "  File \"/opt/anaconda3/envs/epymarl/lib/python3.10/site-packages/torch/distributions/categorical.py\", line 72, in __init__\n    super().__init__(batch_shape, validate_args=validate_args)\n",
    "  File \"/opt/anaconda3/envs/epymarl/lib/python3.10/site-packages/torch/distributions/distribution.py\", line 71, in __init__\n    raise ValueError(\n",
    "ValueError: Expected parameter probs (Tensor of shape (1, 2, 3)) of distribution Categorical(probs: torch.Size([1, 2, 3])) to satisfy the constraint Simplex(), but found invalid values:\ntensor([[[nan, nan, nan],\n         [nan, nan, nan]]])\n"
  ],
  "heartbeat": "2024-12-12T09:06:46.861976",
  "host": {
    "ENV": {},
    "cpu": "Apple M3",
    "hostname": "xmy-mba.local",
    "os": [
      "Darwin",
      "macOS-15.0.1-arm64-arm-64bit"
    ],
    "python_version": "3.10.12"
  },
  "meta": {
    "command": "my_main",
    "config_updates": {
      "env_args": {
        "key": "unity_env",
        "time_limit": 200
      }
    },
    "named_configs": [],
    "options": {
      "--beat-interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--id": null,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print-config": false,
      "--priority": null,
      "--queue": false,
      "--s3": null,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false,
      "COMMAND": null,
      "UPDATE": [
        "env_args.time_limit=200",
        "env_args.key=\"unity_env\""
      ],
      "help": false,
      "with": true
    }
  },
  "resources": [],
  "result": null,
  "start_time": "2024-12-12T09:06:40.380430",
  "status": "FAILED",
  "stop_time": "2024-12-12T09:06:46.877033"
}