{
  "artifacts": [],
  "command": "my_main",
  "experiment": {
    "base_dir": "/Users/xumingyuan/Documents/repository/Unity_epymarl/src",
    "dependencies": [
      "numpy==1.23.5",
      "PyYAML==5.3.1",
      "sacred==0.8.7",
      "torch==2.5.1"
    ],
    "mainfile": "main.py",
    "name": "pymarl",
    "repositories": [
      {
        "commit": "cbc38c09588064eab978501d0f12c2cf58fa7fc2",
        "dirty": false,
        "url": "git@github.com:xmy86/Unity_epymarl.git"
      },
      {
        "commit": "cbc38c09588064eab978501d0f12c2cf58fa7fc2",
        "dirty": false,
        "url": "git@github.com:xmy86/Unity_epymarl.git"
      },
      {
        "commit": "cbc38c09588064eab978501d0f12c2cf58fa7fc2",
        "dirty": false,
        "url": "git@github.com:xmy86/Unity_epymarl.git"
      }
    ],
    "sources": [
      [
        "main.py",
        "_sources/main_b2cc1db06d11795e4f8cf6a3b0165fa1.py"
      ],
      [
        "run.py",
        "_sources/run_29fd448eb2929a57e5fd2547c431175b.py"
      ],
      [
        "utils/logging.py",
        "_sources/logging_80685d67fab61f6e71e93fbe28085531.py"
      ]
    ]
  },
  "fail_trace": [
    "Traceback (most recent call last):\n",
    "  File \"/opt/anaconda3/envs/epymarl/lib/python3.10/site-packages/sacred/config/captured_function.py\", line 42, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"/Users/xumingyuan/Documents/repository/Unity_epymarl/src/main.py\", line 44, in my_main\n    run(_run, config, _log)\n",
    "  File \"/Users/xumingyuan/Documents/repository/Unity_epymarl/src/run.py\", line 67, in run\n    run_sequential(args=args, logger=logger)\n",
    "  File \"/Users/xumingyuan/Documents/repository/Unity_epymarl/src/run.py\", line 100, in run_sequential\n    runner = r_REGISTRY[args.runner](args=args, logger=logger)\n",
    "  File \"/Users/xumingyuan/Documents/repository/Unity_epymarl/src/runners/episode_runner.py\", line 24, in __init__\n    self.env = env_REGISTRY[self.args.env](\n",
    "  File \"/Users/xumingyuan/Documents/repository/Unity_epymarl/src/envs/__init__.py\", line 33, in gymma_fn\n    return GymmaWrapper(**kwargs)\n",
    "  File \"/Users/xumingyuan/Documents/repository/Unity_epymarl/src/envs/gymma.py\", line 39, in __init__\n    self._env = gym.make(f\"{key}\", **kwargs)\n",
    "  File \"/opt/anaconda3/envs/epymarl/lib/python3.10/site-packages/gymnasium/envs/registration.py\", line 740, in make\n    env = env_creator(**env_spec_kwargs)\n",
    "  File \"/Users/xumingyuan/Documents/repository/Unity_epymarl/src/envs/pz_wrapper.py\", line 24, in __init__\n    self.action_space = Tuple(\n",
    "  File \"/opt/anaconda3/envs/epymarl/lib/python3.10/site-packages/gymnasium/spaces/tuple.py\", line 40, in __init__\n    assert isinstance(\n",
    "AssertionError: Discrete(5) does not inherit from `gymnasium.Space`. Actual Type: <class 'gym.spaces.discrete.Discrete'>\n"
  ],
  "heartbeat": "2024-12-11T08:52:04.610721",
  "host": {
    "ENV": {},
    "cpu": "Apple M3",
    "hostname": "xmy-mba.local",
    "os": [
      "Darwin",
      "macOS-15.0.1-arm64-arm-64bit"
    ],
    "python_version": "3.10.12"
  },
  "meta": {
    "command": "my_main",
    "config_updates": {
      "env_args": {
        "key": "pz-mpe-simple-spread-v2",
        "time_limit": 25
      }
    },
    "named_configs": [],
    "options": {
      "--beat-interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--id": null,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print-config": false,
      "--priority": null,
      "--queue": false,
      "--s3": null,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false,
      "COMMAND": null,
      "UPDATE": [
        "env_args.time_limit=25",
        "env_args.key=\"pz-mpe-simple-spread-v2\""
      ],
      "help": false,
      "with": true
    }
  },
  "resources": [],
  "result": null,
  "start_time": "2024-12-11T08:52:02.457227",
  "status": "FAILED",
  "stop_time": "2024-12-11T08:52:04.615548"
}